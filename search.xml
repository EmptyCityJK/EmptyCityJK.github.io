<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>基于顶点依赖连接的下界枚举极大τ−isolated团</title>
      <link href="/posts/e6e16c5b/"/>
      <url>/posts/e6e16c5b/</url>
      
        <content type="html"><![CDATA[<h1 id="基于顶点依赖连接的下界枚举极大τ−isolated团"><a href="#基于顶点依赖连接的下界枚举极大τ−isolated团" class="headerlink" title="基于顶点依赖连接的下界枚举极大τ−isolated团"></a>基于顶点依赖连接的下界枚举极大τ−isolated团</h1><h2 id="定义："><a href="#定义：" class="headerlink" title="定义："></a>定义：</h2><h3 id="j-core"><a href="#j-core" class="headerlink" title="j-core:"></a>j-core:</h3><p><strong>j-core</strong> 是图论中的一个概念，用于表示图中某个连通度较高的顶点子集。给定一个图$G&#x3D;(V,E)$，其顶点集$V$的$j-core$是这样一个顶点子集，其中每个顶点<strong>在该子集内的度数至少为 j</strong>。核心思想是通过<strong>移除不满足最低度数要求</strong>的顶点，保留满足要求的顶点子集。</p><h4 id="常规j-core："><a href="#常规j-core：" class="headerlink" title="常规j-core："></a>常规j-core：</h4><p>如果顶点集$X⊆V$中的每个顶点$v$满足$degX(v)≥j$，则称$X$是$j-core$。</p><ul><li><strong>特点：</strong><img src="https://s2.loli.net/2024/10/10/FqNiE5S9TulAoHQ.png" alt="image-20241010095313678"></li></ul><h4 id="可变j-core："><a href="#可变j-core：" class="headerlink" title="可变j-core："></a>可变j-core：</h4><p>可变 j-core 允许<strong>每个顶点</strong>$v$<strong>的最低度数要求不同</strong>，即每个顶点的要求不是一个常数$j$，而是一个函数$j(v)$，为每个顶点赋予一个独立的最低度数要求。这个扩展使得算法可以根据每个顶点的特性灵活调整连通性要求。</p><ul><li><strong>特点：</strong><img src="https://s2.loli.net/2024/10/10/tk7vMiIY6RJ8NOT.png" alt="image-20241010095353175"></li></ul><h3 id="τ隔离因子："><a href="#τ隔离因子：" class="headerlink" title="τ隔离因子："></a>τ隔离因子：</h3><p><img src="https://s2.loli.net/2024/10/10/LbxQUznk7yAIjtJ.png" alt="image-20241010095541949"></p><ul><li><strong>物理意义：</strong>越大越孤立</li></ul><p><img src="https://s2.loli.net/2024/10/10/WD2j4ATnmva5MqQ.png" alt="image-20241010095631011"></p><ul><li><p><strong>在下界策略中的运用：</strong><img src="https://s2.loli.net/2024/10/10/ThudYPy3QEKBOkI.png" alt="image-20241010100653885"></p></li><li><p><strong>具体下界策略：</strong><img src="https://s2.loli.net/2024/10/10/t5XVRY2lhB9Mn7j.png" alt="image-20241010095853873"></p></li></ul><h3 id="极大孤立团（Maximal-Isolated-Cliques）："><a href="#极大孤立团（Maximal-Isolated-Cliques）：" class="headerlink" title="极大孤立团（Maximal Isolated Cliques）："></a>极大孤立团（Maximal Isolated Cliques）：</h3><h4 id="定义：-1"><a href="#定义：-1" class="headerlink" title="定义："></a>定义：</h4><ol><li><strong>完全连通</strong>：该顶点集是一个团（即顶点集中的每两个顶点之间都有边相连）。</li><li><strong>τ-孤立性</strong>：该顶点集满足一定的孤立性要求，即每个顶点v在该团中的连通度至少为$τ×deg(v)$，其中$τ$是一个范围在$0&lt;τ≤0$的隔离因子。</li></ol><h2 id="枚举图中所有的最大孤立团MIC"><a href="#枚举图中所有的最大孤立团MIC" class="headerlink" title="枚举图中所有的最大孤立团MIC"></a>枚举图中所有的最大孤立团MIC</h2><blockquote><p> 核心思想是通过<strong>深度优先搜索</strong>（DFS）并结合剪枝策略来有效地生成满足$τ$<strong>-隔离性</strong>的最大团。</p></blockquote><h3 id="问题定义"><a href="#问题定义" class="headerlink" title="问题定义"></a>问题定义</h3><p>给定一个无向图$G&#x3D;(V,E)$，其中$V$是顶点集，$E$是边集，目标是枚举所有满足以下条件的<strong>最大$τ$-孤立团</strong>：</p><ul><li><strong>团（clique）</strong>：该顶点集中的任意两个顶点都有边相连。</li><li><strong>$τ$-隔离性</strong>：对于顶点集$X⊆V$中的任意顶点$v$，在集合$X$中的度数（即与其他顶点的连边数）满足$degX(v)≥j_τ(v)&#x3D;τ×deg(v)$</li></ul><h3 id="主要概念"><a href="#主要概念" class="headerlink" title="主要概念"></a>主要概念</h3><ul><li><strong>τ隔离因子</strong>：用于衡量顶点集合的孤立性，定义为$ 0&lt;τ≤1$。越接近 1，要求的孤立性越强。</li><li><strong>可变 j-core</strong>：用于定义每个顶点在团内的最低连通性要求，具体为$j_τ(v)&#x3D;τ×deg(v)$，即顶点$v$在子集$X$中的度数应至少为其总度数的 τ 倍。</li><li><strong>$corejτ$</strong> 用于扩展过程中确保$τ$-隔离性; <strong>$corejK$</strong> 用于伪候选剪枝过程中检测无效顶点</li><li><strong>Cand</strong> :<strong>候选顶点集</strong>，它是是扩展当前团的<u>初步候选集</u>，<strong>包含所有可能用于扩展的顶点</strong>，即与$X$中所有顶点直接相连的顶点。是直接基于图结构计算出来的，在每一步扩展过程中，算法会使用 Cand 作为初始候选顶点集，再进一步通过$τ-core$操作筛选出满足$τ-$隔离性的顶点，生成 <strong>Ext</strong>。<br>$$NewCand &#x3D; Cand ∩ Γ(v)$$</li><li><strong>Ext</strong> :<strong>候选扩展顶点集</strong>，它是 Cand 经过筛选后的集合，<strong>仅保留满足$τ$-隔离性要求的顶点</strong>，用于确保扩展团$X$的候选顶点满足$τ$-隔离性。包含当前团$X$以<u>继续</u>扩展的所有顶点，即可能用于扩展当前团并继续构造 τ-孤立团的顶点。通过 <code>corejτ(Xv ∪ Cand)</code> 计算得出的最大 $τ$-隔离性顶点集。<br>$$Ext &#x3D; corejτ(X’ ∪ Cand)$$</li><li><strong>K候选集（K-candidate set）</strong>：是从 Ext 中提取的，表示那些<strong>在当前步骤中</strong>有可能继续扩展的顶点，结合了团结构的进一步筛选。$$ K ← Ext - X $$  对于某个团$X$，K候选集是指可以用来扩展$X$ 的顶点集。扩展时需要判断这些顶点是否能满足$τ$-隔离性。K候选集 与 <strong>Ext</strong> 的区别在于，K候选集是针对当前具体扩展步骤进一步筛选的可行扩展顶点集。</li><li><strong>NL集</strong>：是 K候选集 中的进一步筛选结果，用于避免重复枚举顶点。NL集 <strong>仅包含那些在排序上位于当前团最后一个顶点$tail(X)$之后的顶点</strong>，确保扩展是<strong>有序</strong>的。NL集 用于防止重复扩展同一个团。$$NL(X)&#x3D;{v∈K(X)∣tail(X)≺v}$$</li></ul><h3 id="算法步骤"><a href="#算法步骤" class="headerlink" title="算法步骤"></a>算法步骤</h3><h4 id="主函数"><a href="#主函数" class="headerlink" title="主函数"></a>主函数</h4><p>从空集开始，递归调用 <code>Expand</code> 函数扩展团，每次选择新的候选顶点，并检查扩展是否生成了一个满足$τ$-隔离性的最大孤立团。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">procedure <span class="title">Main</span><span class="params">(G, τ)</span>:</span></span><br><span class="line"><span class="function">[Input] G =</span> (V, Γ): 无向图</span><br><span class="line">τ: 隔离因子 (<span class="number">0</span> &lt; τ ≤ <span class="number">1</span>)</span><br><span class="line">[Output] 枚举所有最大τ-孤立团</span><br><span class="line">begin</span><br><span class="line">    Sort V in degree descending order;  <span class="comment">// 根据顶点度数对顶点集排序，降序排列</span></span><br><span class="line">    <span class="built_in">Expand</span>(∅, V, V);  <span class="comment">// 从空集开始扩展，初始候选集为全部顶点</span></span><br><span class="line">end</span><br></pre></td></tr></table></figure><h4 id="扩展函数-dfs"><a href="#扩展函数-dfs" class="headerlink" title="扩展函数(dfs)"></a>扩展函数(dfs)</h4><p>对于每个当前团，<strong>找到可以扩展的顶点</strong>，计算其扩展后的$τ$-core，并继续扩展直到无法继续扩展为止。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">procedure <span class="title">Expand</span><span class="params">(X, Ext, Cand)</span>:</span></span><br><span class="line"><span class="function">[Input] X: 当前团</span></span><br><span class="line"><span class="function">Ext: 候选扩展顶点集</span></span><br><span class="line"><span class="function">Cand: 候选顶点集</span></span><br><span class="line"><span class="function">begin</span></span><br><span class="line"><span class="function">  K ← Ext \ X;</span>  <span class="comment">// 计算K候选集（所有可以用来扩展的顶点）</span></span><br><span class="line">  NL ← &#123;v ∈ K | <span class="built_in">tail</span>(X) ≺ v&#125;;  <span class="comment">// 计算NL集，只扩展那些在顶点排序中位于团𝑋最后一个顶点之后的候选顶点</span></span><br><span class="line">  <span class="comment">// Fixpoint 剪枝</span></span><br><span class="line">  <span class="comment">//K = ∅ =&gt; X = Ext(X) =&gt; 扩展后的团与原团𝑋相同，说明已经找到了一个极大τ-孤立团</span></span><br><span class="line">  <span class="keyword">if</span> K = ∅ then  <span class="comment">// 如果没有候选顶点，则当前团为最大孤立团</span></span><br><span class="line">    Output X;  <span class="comment">// 输出X作为fixpoint solution</span></span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  <span class="comment">// NL 集剪枝：避免重复扩展同一个团，确保每次扩展都是按照一定顺序进行的</span></span><br><span class="line">  <span class="keyword">if</span> NL = ∅ then  <span class="comment">// 如果没有可以扩展当前团的顶点</span></span><br><span class="line">    <span class="keyword">if</span> X is jτ-cored then  <span class="comment">// 检查当前团是否满足jτ-core条件: 每个顶点在团𝑋中的度数必须达到其全局度数的𝜏倍</span></span><br><span class="line">      <span class="keyword">if</span> <span class="built_in">SolWithFalseCand</span>(X, K) == <span class="literal">true</span> then  <span class="comment">// 如果存在伪候选顶点</span></span><br><span class="line">        Output X;  <span class="comment">// 输出X为最大孤立团</span></span><br><span class="line">      endif</span><br><span class="line">    endif</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  endif</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">for</span> each v ∈ NL <span class="keyword">do</span>  <span class="comment">// 遍历每个可以扩展的候选顶点</span></span><br><span class="line">    Xv ← X ∪ &#123;v&#125; <span class="comment">// // 将顶点 v 加入当前团，形成新的团 Xv</span></span><br><span class="line">    NewCand ← Cand ∩ Γ(v);  <span class="comment">// 更新初始候选集, 只保留与新团相连的顶点</span></span><br><span class="line">    NewExt ← corejτ(Xv ∪ NewCand);  <span class="comment">// 计算扩展集的corejτ，确保满足 τ-隔离性</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> Xv ⊆ NewExt then  <span class="comment">// 如果扩展后的团Xv满足 τ-隔离性</span></span><br><span class="line">      <span class="built_in">Expand</span>(Xv, NewExt, NewCand);  <span class="comment">// 递归扩展</span></span><br><span class="line">    endif</span><br><span class="line">  endfor</span><br><span class="line">end</span><br></pre></td></tr></table></figure><h4 id="伪候选顶点检测（SolWithFalseCand）"><a href="#伪候选顶点检测（SolWithFalseCand）" class="headerlink" title="伪候选顶点检测（SolWithFalseCand）"></a>伪候选顶点检测（SolWithFalseCand）</h4><p>当扩展团时，候选集$K$中有可能存在一些<strong>伪候选顶点</strong>，它们虽然可以扩展团，但不会生成满足$τ$-隔离性的团。此步骤用于检测并排除这些伪候选顶点，提前终止那些无法继续有效扩展的候选路径，减少无效扩展。</p><ul><li><strong>伪候选剪枝</strong>基于顶点的度数要求：对于每个候选顶点$x∈K(X)$，计算其在当前候选集中的最低度数要求<br>  $$<br>  jK(x) &#x3D; \max ( 0, \tau \cdot \deg(x) - |X| )<br>  $$如果某些候选顶点无法满足这个度数要求，它们被视为<strong>伪候选顶点</strong>。<br>  伪候选顶点无法满足$τ$-隔离性要求，因此其加入只会破坏团的结构。</li><li><code>corejK(Q)</code> 用来从$Q$中移除不满足最低度数要求$jK(x)$的顶点。如果某个最大团$Q$的$corejK(Q)$ 不为空，意味着存在有效的扩展，团$X$还可以继续扩展，因此$X$不是最大$τ$-孤立团</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">procedure <span class="title">SolWithFalseCand</span><span class="params">(X, K)</span>:</span></span><br><span class="line"><span class="function">[Input] X: 当前团</span></span><br><span class="line"><span class="function">K: 候选顶点集</span></span><br><span class="line"><span class="function">[Output] 检查候选集𝐾中是否存在伪候选顶点</span></span><br><span class="line"><span class="function">begin</span></span><br><span class="line"><span class="function">  // 定义了每个候选顶点𝑥的最低度数要求</span></span><br><span class="line"><span class="function">  Let jK be a function defined as</span></span><br><span class="line"><span class="function">  jK(x) =</span> max&#123;<span class="number">0</span>, τ · <span class="built_in">degG</span>(x) − |X|&#125; <span class="keyword">for</span> each x ∈ K;  <span class="comment">// 为K候选集中的顶点定义jK函数</span></span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">for</span> each Q presented by <span class="title">MaxCliqueEnum</span><span class="params">(G[K])</span> <span class="keyword">do</span>  <span class="comment">// 遍历K候选集中的所有团Q</span></span></span><br><span class="line"><span class="function">    <span class="comment">// 伪候选剪枝：通过检测伪候选顶点，提前终止那些无法继续有效扩展的候选路径，减少无效扩展。</span></span></span><br><span class="line"><span class="function">    <span class="keyword">if</span> <span class="title">corejK</span><span class="params">(Q)</span> !</span>= ∅ then  <span class="comment">// 如果存在一个K候选集的core不为空</span></span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;  <span class="comment">// X不是最大孤立团(如果找到有效扩展，说明不是伪候选，继续扩展。)</span></span><br><span class="line">    endif</span><br><span class="line">  endfor</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;  <span class="comment">// X是最大孤立团，并且含有伪候选顶点(当前团𝑋已经没有任何有效的候选顶点可以用于扩展，剩余的候选顶点（伪候选顶点）也无法生成符合条件的新团)</span></span><br><span class="line">end</span><br></pre></td></tr></table></figure><h4 id="corejτ：扩展过程中，移除不满足τ-core条件的顶点"><a href="#corejτ：扩展过程中，移除不满足τ-core条件的顶点" class="headerlink" title="corejτ：扩展过程中，移除不满足τ-core条件的顶点"></a>corejτ：扩展过程中，移除不满足τ-core条件的顶点</h4><ol><li>输入：D &#x3D; $X’\cup NewCand$</li><li>度数计算：$\forall u\in X’\cup NewCand$, 计算$deg_{X’\cup NewCand} (u)$</li><li>检查$\tau$-core条件：$\forall u\in X’\cup NewCand$<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">if</span> <span class="title">deg_D</span><span class="params">(u)</span> &lt; τ * <span class="title">deg</span><span class="params">(u)</span></span></span><br><span class="line"><span class="function">  D ← D \ u</span></span><br></pre></td></tr></table></figure></li><li>反复迭代：直到没有顶点被移除</li><li>返回NewExt</li></ol><h4 id="corejk-伪候选剪枝阶段，用于判断候选顶点集K中是否有有效的扩展顶点"><a href="#corejk-伪候选剪枝阶段，用于判断候选顶点集K中是否有有效的扩展顶点" class="headerlink" title="corejk: 伪候选剪枝阶段，用于判断候选顶点集K中是否有有效的扩展顶点"></a>corejk: 伪候选剪枝阶段，用于判断候选顶点集K中是否有有效的扩展顶点</h4><ol><li>输入：顶点集Q（$Q \subseteq K(X)$）</li><li>定义jk函数(jk(u): 顶点u的<strong>最低度数要求</strong>)：$$jk(u)&#x3D;max( 0, \tau \times deg(u)-|X|)$$</li><li>度数计算：$\forall u\in Q$, 计算$deg_{Q} (u)$</li><li>检查jk条件：<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">if</span> <span class="title">deg_Q</span><span class="params">(u)</span> &lt; <span class="title">jk</span><span class="params">(u)</span> </span>=&gt; |x| + <span class="built_in">deg_Q</span>(u) &lt; τ * <span class="built_in">deg</span>(u)</span><br><span class="line">  Q ← Q \ u</span><br></pre></td></tr></table></figure></li><li>反复迭代：所有点的度数都满足jk || 没有点需要被移除</li><li>返回满足jk条件的结果集中的最大顶点子集（如果结果集为$\emptyset$，则表明无有效扩展）</li></ol>]]></content>
      
      
      <categories>
          
          <category> 科研 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何在Hexo博客中新增自定义图标</title>
      <link href="/posts/7991ff98/"/>
      <url>/posts/7991ff98/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>由于Butterfly主题使用的是<code>Font Awesome图标库</code>，当我们想要使用到该图标库里没有的图标时就需要修改配置文件将PNG图标存放到指定路径上，下面介绍详细操作。</p><h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><p><strong>1. 获取图标</strong><br>这里针对算法竞赛选手给出我找到的常用竞赛网站的网址：</p><blockquote><p><a href="https://codeforces.com/codeforces.org/s/52727/favicon-96x96.png">CodeForces-icon-96x96</a><br><a href="https://img.atcoder.jp/assets/icon/avatar.png">AtCoder-icon-trans</a><br><a href="https://leetcode.com/favicon-32x32.png">LeetCode-icon-32x32</a><br><a href="https://www.nowcoder.com/favicon.ico">NowCoder-icon-32x32</a></p></blockquote><p>在知道图标的url后可以直接使用这个favicon，或者下载下来并将其放到你的博客项目中。<br>这里我下载的路径是<code>[BlogRoot]/source/img/xxx.png</code></p><p><strong>2. 添加你需要的社交图标配置</strong><br>在你的 <code>_config.butterfly.yml</code> 文件的 social 部分，添加你的图标配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">social:</span></span><br><span class="line">  <span class="attr">fab fa-bilibili:</span> <span class="string">https://space.bilibili.com/你的bilibili主页</span> <span class="string">||</span> <span class="string">BiliBili</span> <span class="string">||</span> <span class="string">&#x27;#ff6396&#x27;</span> </span><br><span class="line">  <span class="attr">fab fa-github:</span> <span class="string">https://github.com/你的Github用户名</span> <span class="string">||</span> <span class="string">Github</span> <span class="string">||</span> <span class="string">&#x27;#24292e&#x27;</span></span><br><span class="line">  <span class="attr">custom_codeforces:</span> <span class="string">https://codeforces.com/profile/你的cf主页</span> <span class="string">||</span> <span class="string">CodeForces</span> <span class="string">||</span> <span class="string">&#x27;#1f8acb&#x27;</span></span><br><span class="line">  <span class="attr">custom_atcoder:</span> <span class="string">https://atcoder.jp/users/你的atc主页</span> <span class="string">||</span> <span class="string">AtCoder</span> <span class="string">||</span> <span class="string">&#x27;#2b292a&#x27;</span></span><br><span class="line">  <span class="attr">custom_leetcode:</span> <span class="string">https://leetcode.cn/u/你的力扣主页/</span> <span class="string">||</span> <span class="string">LeetCode</span> <span class="string">||</span> <span class="string">&#x27;#FFA116&#x27;</span></span><br><span class="line">  <span class="attr">custom_nowcoder:</span> <span class="string">https://ac.nowcoder.com/acm/contest/profile/你的牛客竞赛主页</span> <span class="string">||</span> <span class="string">Nowcoder</span> <span class="string">||</span> <span class="string">&#x27;#1f8acb&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>3. 自定义你的图标的CSS</strong><br>在<code>[BlogRoot]/source/css/custom.css</code>文件中，添加你要添加的牛客图标的CSS样式，这里介绍两种方式：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*自定义社交图标*/</span></span><br><span class="line"><span class="comment">/*方式1. url为相对路径*/</span></span><br><span class="line"><span class="selector-class">.custom_codeforces</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">20px</span>;   <span class="comment">/* 图标宽度 */</span></span><br><span class="line">  <span class="attribute">height</span>: <span class="number">20px</span>;  <span class="comment">/* 图标高度 */</span></span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">&#x27;/img/cf-favicon-96x96.png&#x27;</span>) no-repeat center;</span><br><span class="line">  <span class="attribute">background-size</span>: contain;</span><br><span class="line">  <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*方式2. url为网址或你图床的网址*/</span></span><br><span class="line"><span class="selector-class">.custom_nowcoder</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">&#x27;https://www.nowcoder.com/favicon.ico&#x27;</span>) no-repeat center;</span><br><span class="line">  <span class="attribute">background-size</span>: contain;</span><br><span class="line">  <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>4. 清理并重新生成</strong><br>这将清理缓存并重新生成Hexo博客。现在你应该能够看到你的自定义图标了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl; hexo g; hexo s</span><br></pre></td></tr></table></figure><p><strong>5. 调试</strong><br>如果图标没有显示，请检查：</p><ul><li>浏览器开发者工具（按F12），查看是否正确加载了图标</li><li>CSS样式是否被正确应用，路径是否正确</li></ul><h1 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h1><p>可以看到已经配置成功了，在博客的个人名片上 我们能够点击我们添加的图标跳转到我们的各种网站的个人主页。<br><img src="https://s2.loli.net/2024/10/09/ecdOI6ZnpwLGFE5.png" alt="个人名片.png"></p>]]></content>
      
      
      <categories>
          
          <category> 博客搭建教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在Hexo博客上添加本地Live 2D模型(.moc/.moc3)</title>
      <link href="/posts/de3e4889/"/>
      <url>/posts/de3e4889/</url>
      
        <content type="html"><![CDATA[<h1 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h1><p>我一直很想把自己直播使用的Live 2D模型添加到我的博客中，但是跟着网上最主流的Live 2D添加方式总是无法成功添加。后面通过控制变量法发现是由于hexo-helper-live2d已经于21年停止维护，所以只支持较老版本的.moc模型，而我的模型是.moc3格式的，故导致无法显示的问题。<br>下文将介绍两个在Hexo博客上添加本地Live2d模型的插件：</p><ul><li>hexo-helper-live2d（该项目已于21年停止维护，只支持 <strong>.moc</strong> 格式下的live2d模型）</li><li>hexo-oh-my-live2d（该项目目前正在被积极维护，可支持 <strong>所有版本</strong> 的live2d模型）<blockquote><p>Live 2D模型获取：</p><ul><li>个人收集的Live2d模型，一般提取自游戏中：<a href="https://github.com/Eikanya/Live2d-model">Live2d-model</a></li><li>与 <code>hexo-helper-live2d</code> 相关的Live 2D：<a href="https://github.com/xiazeyu/live2d-widget-models">live2d-widget-models</a></li></ul></blockquote></li></ul><h1 id="hexo-helper-live2d-支持-moc"><a href="#hexo-helper-live2d-支持-moc" class="headerlink" title="hexo-helper-live2d (支持.moc)"></a>hexo-helper-live2d (支持.moc)</h1><blockquote><p>Github地址：<a href="https://github.com/EYHN/hexo-helper-live2d">hexo-helper-live2d</a></p></blockquote><p>这个插件目前只支持.moc格式的Live 2D模型，如果要添加的模型是.moc3的话 会出现无法显示Live 2D的情况，但是操作更简单，网上相关教程更多。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ol><li>在Hexo根目录 <code>[BlogRoot]</code> 下打开终端，输入以下指令安装该插件：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-helper-live2d</span><br></pre></td></tr></table></figure></li><li>打开站点配置文件 <code>[BlogRoot]\_config.yml</code><br>搜索Live2d，按照如下注释内容指示进行操作。<br>如果没有搜到Live2d的配置项，就直接把以下内容复制到最底部。<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Live2D</span></span><br><span class="line"><span class="comment">## https://github.com/EYHN/hexo-helper-live2d</span></span><br><span class="line"><span class="attr">live2d:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment">#开关插件版看板娘</span></span><br><span class="line">  <span class="attr">scriptFrom:</span> <span class="string">local</span> <span class="comment"># 默认</span></span><br><span class="line">  <span class="attr">pluginRootPath:</span> <span class="string">live2dw/</span> <span class="comment"># 插件在站点上的根目录(相对路径)</span></span><br><span class="line">  <span class="attr">pluginJsPath:</span> <span class="string">lib/</span> <span class="comment"># 脚本文件相对与插件根目录路径</span></span><br><span class="line">  <span class="attr">pluginModelPath:</span> <span class="string">assets/</span> <span class="comment"># 模型文件相对与插件根目录路径</span></span><br><span class="line">  <span class="comment"># scriptFrom: jsdelivr # jsdelivr CDN</span></span><br><span class="line">  <span class="comment"># scriptFrom: unpkg # unpkg CDN</span></span><br><span class="line">  <span class="comment"># scriptFrom: https://npm.elemecdn.com/live2d-widget@3.x/lib/L2Dwidget.min.js # 你的自定义 url</span></span><br><span class="line">  <span class="attr">tagMode:</span> <span class="literal">false</span> <span class="comment"># 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中</span></span><br><span class="line">  <span class="attr">debug:</span> <span class="literal">false</span> <span class="comment"># 调试, 是否在控制台输出日志</span></span><br><span class="line">  <span class="attr">model:</span></span><br><span class="line">    <span class="attr">use:</span> <span class="string">live2d-widget-model-wanko</span> <span class="comment"># npm-module package name</span></span><br><span class="line">    <span class="comment"># use: wanko # 博客根目录/live2d_models/ 下的目录名</span></span><br><span class="line">    <span class="comment"># use: ./wives/wanko # 相对于博客根目录的路径</span></span><br><span class="line">    <span class="comment"># use: https://npm.elemecdn.com/live2d-widget-model-wanko@1.0.5/assets/wanko.model.json # 你的自定义 url</span></span><br><span class="line">  <span class="attr">display:</span></span><br><span class="line">    <span class="attr">position:</span> <span class="string">right</span> <span class="comment">#控制看板娘位置</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">150</span> <span class="comment">#控制看板娘大小</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">300</span> <span class="comment">#控制看板娘大小</span></span><br><span class="line">  <span class="attr">mobile:</span></span><br><span class="line">    <span class="attr">show:</span> <span class="literal">true</span> <span class="comment"># 手机中是否展示</span></span><br></pre></td></tr></table></figure></li><li>完成后保存修改，在Hexo根目录下运行指令。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl; hexo g; hexo s</span><br></pre></td></tr></table></figure><blockquote><p>之所以必须要使用hexo clean是因为我们需要清空缓存重新生成静态页面，不然看板娘没被加入生成的静态页面里，是不会出现的。</p></blockquote></li></ol><h2 id="下载并更换看板娘"><a href="#下载并更换看板娘" class="headerlink" title="下载并更换看板娘"></a>下载并更换看板娘</h2><p>如果不追求好看的话，可以直接下载live2d-widget-model-xxx系列的Live 2D。</p><ol><li>同样是在Hexo根目录 <code>[BlogRoot]</code> 下，打开终端输入指令，选择想要的看板娘进行安装。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 一个例子</span></span><br><span class="line">npm install --save live2d-widget-model-koharu</span><br></pre></td></tr></table></figure></li><li>然后在站点配置文件 <code>[Blogroot]\_config.yml</code> 里找到model.use项修改为期望的模型。<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">model:</span></span><br><span class="line">  <span class="attr">use:</span> <span class="string">live2d-widget-model-koharu</span></span><br><span class="line">  <span class="comment"># 默认为live2d-widget-model-wanko</span></span><br></pre></td></tr></table></figure></li><li>运行<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl; hexo g; hexo s</span><br></pre></td></tr></table></figure></li></ol><h2 id="卸载看板娘"><a href="#卸载看板娘" class="headerlink" title="卸载看板娘"></a>卸载看板娘</h2><p>卸载插件和卸载模型的指令都是通过npm进行操作的。在博客根目录 <code>[Blogroot]</code> 打开终端，输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall hexo-helper-live2d <span class="comment">#卸载看板娘插件</span></span><br><span class="line">npm uninstall live2d-widget-model-modelname <span class="comment">#卸载看板娘模型。记得替换modelname为你下载的看板娘名称</span></span><br></pre></td></tr></table></figure><p>卸载后为了保证配置项不出错，记得把 <code>[Blogroot]\_config.yml</code> 里的配置项给注释或者删除掉。<br><strong>更多配置详见参考博客：</strong><br><a href="https://akilar.top/posts/5b8f515f/">Live2D Widget</a></p><hr><h1 id="oh-my-live2d-支持-moc-moc3"><a href="#oh-my-live2d-支持-moc-moc3" class="headerlink" title="oh-my-live2d (支持.moc &amp;&amp; .moc3)"></a>oh-my-live2d (支持.moc &amp;&amp; .moc3)</h1><blockquote><p>Github地址：<br><a href="https://github.com/oh-my-live2d/oh-my-live2d/">oh-my-live2d</a><br><a href="https://github.com/kongxiangyiren/hexo-oh-my-live2d">Hexo-oh-my-live2d</a></p></blockquote><p>该插件目前网上教程较少，但其支持<strong>所有版本的Live2D模型</strong>, 使用方式足够简单并且高可自定义，目前该项目正处于积极维护状态。因为我们这里是要在Hexo博客中添加看板娘，故只介绍如何在Hexo中使用。</p><ul><li>需要注意的一点是，<a href="https://oml2d.com/guide/hexo.html">官方网站</a>给的参考代码可能有一点问题，本人在配置过程中出现了本地运行时能成功运行，但部署到服务器上后却无法显示的问题。</li><li>解决方案：按照<a href="https://github.com/kongxiangyiren/hexo-oh-my-live2d">GitHub</a>上的参考代码进行修改后便可正常显示。</li></ul><ol><li>安装插件<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-oh-my-live2d</span><br></pre></td></tr></table></figure></li><li>使用（这里贴的我的配置，我使用的不是CDN而是本地的Live2D，需要使用本地文件的朋友可以参考我的写法）<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># _config.yml</span></span><br><span class="line"><span class="attr">OhMyLive2d:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">CDN:</span> <span class="string">https://unpkg.com/oh-my-live2d</span></span><br><span class="line">  <span class="attr">option:</span></span><br><span class="line">    <span class="attr">dockedPosition:</span> <span class="string">&#x27;right&#x27;</span> <span class="comment"># 模型停靠位置 默认值: &#x27;right&#x27; 可选值: &#x27;left&#x27; | &#x27;right&#x27;</span></span><br><span class="line">  <span class="comment"># CDN: https://registry.npmmirror.com/oh-my-live2d/0.13/files/dist/index.min.js</span></span><br><span class="line">  <span class="comment"># option:</span></span><br><span class="line">  <span class="comment">#   # importType: &#x27;cubism2&#x27; #  导入类型, 默认使用全量导入: complete , 可选值: complete, cubism2, cubism5</span></span><br><span class="line">  <span class="comment">#   libraryUrls: # 自定义 Cubism SDK 外部资源地址</span></span><br><span class="line">  <span class="comment">#     complete: https://registry.npmmirror.com/oh-my-live2d/latest/files/lib/complete.js</span></span><br><span class="line">  <span class="comment">#     cubism2: https://registry.npmmirror.com/oh-my-live2d/latest/files/lib/cubism2.js</span></span><br><span class="line">  <span class="comment">#     cubism5: https://registry.npmmirror.com/oh-my-live2d/latest/files/lib/cubism5.js</span></span><br><span class="line">    <span class="comment"># menus:</span></span><br><span class="line">    <span class="comment"># items: |</span></span><br><span class="line">    <span class="comment">#   (defaultItems)=&gt;&#123;</span></span><br><span class="line">    <span class="comment">#    return [</span></span><br><span class="line">    <span class="comment">#      ...defaultItems,</span></span><br><span class="line">    <span class="comment">#      &#123;</span></span><br><span class="line">    <span class="comment">#        id: &#x27;github&#x27;,</span></span><br><span class="line">    <span class="comment">#        icon: &#x27;github-fill&#x27;,</span></span><br><span class="line">    <span class="comment">#        title: &#x27;我的github&#x27;,</span></span><br><span class="line">    <span class="comment">#        onClick: ()=&gt;window.open(&#x27;https://github.com/hacxy&#x27;)</span></span><br><span class="line">    <span class="comment">#      &#125;</span></span><br><span class="line">    <span class="comment">#    ]</span></span><br><span class="line">    <span class="comment">#   &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># items:</span></span><br><span class="line">    <span class="comment">#   - id: &#x27;github&#x27;</span></span><br><span class="line">    <span class="comment">#     icon: &#x27;github-fill&#x27;</span></span><br><span class="line">    <span class="comment">#     title: &#x27;我的github&#x27;</span></span><br><span class="line">    <span class="comment">#     onClick: ()=&gt;window.open(&#x27;https://github.com/hacxy&#x27;)</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">mobileDisplay:</span> <span class="literal">false</span> <span class="comment"># 是否在移动端显示</span></span><br><span class="line">    <span class="attr">models:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">/live2d-models/Miss/Miss.model3.json</span></span><br><span class="line">        <span class="attr">position:</span> [<span class="number">-60</span>, <span class="number">35</span>] <span class="comment"># 模型在舞台中的位置。 默认值: [0,0] [横坐标, 纵坐标]</span></span><br><span class="line">        <span class="attr">scale:</span> <span class="number">0.15</span> <span class="comment"># 模型的缩放比例 默认值: 0.1</span></span><br><span class="line">        <span class="comment"># showHitAreaFrames: false # 是否显示点击区域 默认值: false</span></span><br><span class="line">        <span class="attr">stageStyle:</span></span><br><span class="line">          <span class="attr">width:</span> <span class="number">250</span></span><br><span class="line">          <span class="attr">height:</span> <span class="number">250</span></span><br><span class="line">        <span class="attr">mobilePosition:</span> [<span class="number">-10</span>, <span class="number">23</span>] <span class="comment"># 移动端时模型在舞台中的位置。 默认值: [0,0] [横坐标, 纵坐标]</span></span><br><span class="line">        <span class="attr">mobileScale:</span> <span class="number">0.1</span> <span class="comment"># 移动端时模型的缩放比例 默认值: 0.1</span></span><br><span class="line">        <span class="attr">mobileStageStyle:</span> <span class="comment"># 移动端时舞台的样式</span></span><br><span class="line">          <span class="attr">width:</span> <span class="number">180</span></span><br><span class="line">          <span class="attr">height:</span> <span class="number">166</span></span><br><span class="line">        <span class="attr">motionPreloadStrategy:</span> <span class="string">ALL</span> <span class="comment"># 动作预加载策略 默认值: IDLE 可选值: ALL | IDLE | NONE</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">/live2d-models/hailunna_4/hailunna_4.model3.json</span></span><br><span class="line">        <span class="attr">position:</span> [<span class="number">-50</span>, <span class="number">0</span>] <span class="comment"># 模型在舞台中的位置。 默认值: [0,0] [横坐标, 纵坐标]</span></span><br><span class="line">        <span class="attr">scale:</span> <span class="number">0.08</span> <span class="comment"># 模型的缩放比例 默认值: 0.1</span></span><br><span class="line">        <span class="comment"># showHitAreaFrames: true # 是否显示点击区域 默认值: false</span></span><br><span class="line">        <span class="attr">stageStyle:</span></span><br><span class="line">          <span class="attr">width:</span> <span class="number">350</span></span><br><span class="line">          <span class="attr">height:</span> <span class="number">350</span></span><br><span class="line">        <span class="attr">mobilePosition:</span> [<span class="number">-10</span>, <span class="number">23</span>] <span class="comment"># 移动端时模型在舞台中的位置。 默认值: [0,0] [横坐标, 纵坐标]</span></span><br><span class="line">        <span class="attr">mobileScale:</span> <span class="number">0.08</span> <span class="comment"># 移动端时模型的缩放比例 默认值: 0.1</span></span><br><span class="line">        <span class="attr">mobileStageStyle:</span> <span class="comment"># 移动端时舞台的样式</span></span><br><span class="line">          <span class="attr">width:</span> <span class="number">180</span></span><br><span class="line">          <span class="attr">height:</span> <span class="number">166</span></span><br><span class="line">        <span class="attr">motionPreloadStrategy:</span> <span class="string">IDLE</span> <span class="comment"># 动作预加载策略 默认值: IDLE 可选值: ALL | IDLE | NONE</span></span><br><span class="line">        </span><br><span class="line">    <span class="attr">parentElement:</span> <span class="string">document.body</span> <span class="comment">#为组件提供一个父元素，如果未指定则默认挂载到 body 中</span></span><br><span class="line">    <span class="attr">primaryColor:</span> <span class="string">&#x27;var(--btn-bg)&#x27;</span> <span class="comment"># 主题色 支持变量</span></span><br><span class="line">    <span class="attr">sayHello:</span> <span class="literal">false</span> <span class="comment"># 是否在初始化阶段打印项目信息</span></span><br><span class="line">    <span class="attr">tips:</span></span><br><span class="line">      <span class="attr">style:</span></span><br><span class="line">        <span class="attr">width:</span> <span class="number">230</span></span><br><span class="line">        <span class="attr">height:</span> <span class="number">120</span></span><br><span class="line">        <span class="attr">left:</span> <span class="string">calc(50%</span> <span class="bullet">-</span> <span class="string">20px)</span></span><br><span class="line">        <span class="attr">top:</span> <span class="string">-100px</span></span><br><span class="line">      <span class="attr">mobileStyle:</span></span><br><span class="line">        <span class="attr">width:</span> <span class="number">180</span></span><br><span class="line">        <span class="attr">height:</span> <span class="number">80</span></span><br><span class="line">        <span class="attr">left:</span> <span class="string">calc(50%</span> <span class="bullet">-</span> <span class="string">30px)</span></span><br><span class="line">        <span class="attr">top:</span> <span class="string">-100px</span></span><br><span class="line">      <span class="attr">idleTips:</span></span><br><span class="line">        <span class="attr">interval:</span> <span class="number">3600</span></span><br><span class="line">        <span class="attr">message:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">你好呀，我是空城~</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">欢迎来到我的小站~</span></span><br><span class="line">        <span class="comment"># 自定义提示语 需要 引入 axios 库 ,也可以使用其他方法</span></span><br><span class="line">        <span class="comment"># message: |</span></span><br><span class="line">        <span class="comment">#   function()&#123;</span></span><br><span class="line">        <span class="comment">#     return axios.get(&#x27;https://v1.hitokoto.cn?c=i&#x27;)</span></span><br><span class="line">        <span class="comment">#       .then(function (response) &#123;</span></span><br><span class="line">        <span class="comment">#         return response.data.hitokoto ;</span></span><br><span class="line">        <span class="comment">#       &#125;)</span></span><br><span class="line">        <span class="comment">#       .catch(function (error) &#123;</span></span><br><span class="line">        <span class="comment">#         console.error(error);</span></span><br><span class="line">        <span class="comment">#       &#125;);</span></span><br><span class="line">        <span class="comment">#   &#125;</span></span><br><span class="line">        <span class="comment"># wordTheDay: true</span></span><br><span class="line">        <span class="comment"># 自定义  https://v1.hitokoto.cn  数据</span></span><br><span class="line">        <span class="comment"># wordTheDay: |</span></span><br><span class="line">        <span class="comment">#   function(wordTheDayData)&#123;</span></span><br><span class="line">        <span class="comment">#     return `$&#123;wordTheDayData.hitokoto&#125;    by.$&#123;wordTheDayData.from&#125;`;</span></span><br><span class="line">        <span class="comment">#   &#125;</span></span><br><span class="line">  <span class="comment"># then: |</span></span><br><span class="line">  <span class="comment">#   (oml2d)=&gt;&#123;</span></span><br><span class="line">  <span class="comment">#      setTimeout(() =&gt; &#123;</span></span><br><span class="line">  <span class="comment">#     oml2d.tipsMessage(&#x27;hello world&#x27;, 3000, 10);</span></span><br><span class="line">  <span class="comment">#   &#125;, 8000);</span></span><br><span class="line">  <span class="comment">#   &#125;</span></span><br></pre></td></tr></table></figure>看板娘可爱捏，快开始你的Live 2D之旅吧！</li></ol>]]></content>
      
      
      <categories>
          
          <category> 博客搭建教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
